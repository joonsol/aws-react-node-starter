name: Deploy Frontend to S3 + CloudFront

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      # ✅ 1) Vite 환경변수 주입 (빌드 전에!)
      - name: Inject Vite env
        run: |
          pwd && ls -la
          cat > .env.production <<EOF
          VITE_API_URL=${{ secrets.API_URL }}
          NODE_ENV=production
          EOF
          echo "---- .env.production ----"
          cat .env.production


      - name: Build
        run: npm run build

      # ✅ 2) 빌드 산출물 검증: localhost 흔적 있으면 실패
      - name: Assert dist uses remote API (no localhost)
        run: |
          if grep -R "http://localhost:3001" -n dist; then
            echo "❌ dist 안에 localhost:3001가 남아있습니다. .env 주입/코드 확인 필요"
            exit 1
          fi
          echo "✅ localhost 흔적 없음"

      # AWS 자격 증명 등록
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # ✅ AWS CLI v2 설치
      - name: Install AWS CLI v2
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip curl
          curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # 1️⃣ 해시 자산: 장기 캐시
      - name: Sync hashed assets with long cache
        run: |
          aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      # 2️⃣ index.html: 캐시 없음
      - name: Upload index.html with no-cache
        run: |
          aws s3 cp ./dist/index.html s3://${{ secrets.S3_BUCKET }}/index.html \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"

      # 3️⃣ CloudFront 무효화 (처음엔 전체, 이후엔 index.html 만 사용해도 됨)
      - name: Invalidate CloudFront (all once)
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --paths "/*"
