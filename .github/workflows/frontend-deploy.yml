name: Deploy Frontend to S3 + CloudFront

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      # ✅ .env.production에 VITE_API_URL 주입 (빌드 전에!)
      - name: Inject Vite env
        run: |
          echo "VITE_API_URL=${{ secrets.API_URL }}" > .env.production
          echo "NODE_ENV=production" >> .env.production

      - name: Build
        run: npm run build

      # AWS 자격 증명 등록
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      # ✅ AWS CLI v2 설치
      - name: Install AWS CLI v2
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip curl
          curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # 1️⃣ 해시 자산: 장기 캐시
      - name: Sync hashed assets with long cache
        run: |
          aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      # 2️⃣ index.html: no-cache
      - name: Upload index.html with no-cache
        run: |
          aws s3 cp ./dist/index.html s3://${{ secrets.S3_BUCKET }}/index.html \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html"

      # 3️⃣ CloudFront 무효화 (index.html만)
      - name: Invalidate CloudFront (index.html)
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --paths "/index.html"
